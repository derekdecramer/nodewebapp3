{"version":3,"sources":["reportWebVitals.js","components/Home.js","components/Contests.js","components/Customers.js","components/CustomerView.js","components/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","to","Contests","useState","contests","setContests","accounts","setAccounts","useEffect","fetch","headers","response","console","log","json","myJson","map1","Map","i","length","account","has","contest_id","set","get","className","map","contest","name","id","Customers","props","customers","setCustomers","navigate","useNavigate","useFitText","fontSize","ref","specific","customer","onClick","localStorage","setItem","first_name","last_name","email","active","account_manager_id","style","reason_for_joining","created_date","customers2","push","height","CustomerView","accounts2","customer_id","getItem","address","city","state","zip_code","rating","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebbbb2e6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <nav>\r\n                <Link to=\"/contests\">Contests</Link>\r\n                <br></br><br></br>\r\n                <Link to=\"/customers\">Customers (Home)</Link>\r\n            </nav>\r\n            <br></br>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport Home from \"./Home\";\r\n\r\nconst Contests = () => {\r\n    const [contests, setContests] = useState([]);\r\n    const [accounts, setAccounts] = useState([]);\r\n\r\n    const getData = () => {\r\n        fetch('contests.json'\r\n            , {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            }\r\n        )\r\n            .then(function (response) {\r\n                console.log(response)\r\n                return response.json();\r\n            })\r\n            .then(function (myJson) {\r\n                console.log(myJson);\r\n                setContests(myJson)\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    const getData2 = () => {\r\n        fetch('accounts.json'\r\n            , {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            }\r\n        )\r\n            .then(function (response) {\r\n                console.log(response)\r\n                return response.json();\r\n            })\r\n            .then(function (myJson) {\r\n                console.log(myJson);\r\n                setAccounts(myJson)\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData2()\r\n    }, [])\r\n\r\n    //javascript\r\n\r\n    const map1 = new Map();\r\n    for (var i = 0; i < accounts.length; i++) {\r\n        var account = accounts[i];\r\n\r\n        if (map1.has(account.contest_id)) {\r\n            map1.set(account.contest_id, map1.get(account.contest_id) + 1);\r\n        } else {\r\n            map1.set(account.contest_id, 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Contest Name</th>\r\n                        <th>Number of Contests</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        contests && contests.length > 0 && contests.map((contest) => (\r\n                        <tr key={contest.id}>\r\n                            <td>{contest.name}</td>\r\n                            <td>{map1.get(contest.id)}</td>\r\n                        </tr>\r\n\r\n                    ))}\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default Contests;","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useFitText from \"use-fit-text\";\r\nimport {\r\n    useTable,\r\n    useMemo,\r\n    getRowId,\r\n    useResizeColumns,\r\n    useFlexLayout,\r\n    useRowSelect,\r\n} from \"react-table\"\r\n\r\nconst Customers = (props) => {\r\n\r\n    const [customers, setCustomers] = useState([]);\r\n    const navigate = useNavigate();\r\n    const { fontSize, ref } = useFitText();\r\n\r\n    const getData = () => {\r\n        fetch('customers.json'\r\n            , {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            }\r\n        )\r\n            .then(function (response) {\r\n                console.log(response)\r\n                return response.json();\r\n            })\r\n            .then(function (myJson) {\r\n                console.log(myJson);\r\n                setCustomers(myJson)\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n\r\n   \r\n\r\n    if (props.specific == \"0\") {\r\n        return (\r\n            <div className=\"app-container\">\r\n                <table>\r\n\r\n                    <thead>\r\n                        <tr>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Email</th>\r\n                            <th>Active</th>\r\n                            <th>Account Manager ID</th>\r\n                            <th>Reason For Joining</th>\r\n                            <th>Date Created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {customers && customers.length > 0 && customers.map((customer) => (\r\n\r\n                            <tr key={customer.id} data-item={customer} \r\n                                onClick={() => {\r\n                                    localStorage.setItem('customerID', customer.id);\r\n                                    navigate('/customerview');\r\n                                }\r\n                            }>\r\n                                \r\n                                <td>{customer.first_name}</td>\r\n                                <td>{customer.last_name}</td>\r\n                                <td>{customer.email}</td>\r\n                                <td>{customer.active}</td>\r\n                                <td>{customer.account_manager_id}</td>\r\n                                <td ref={ref} style={{ fontSize}}> { customer.reason_for_joining }</td>\r\n                                <td>{customer.created_date}</td>\r\n                            </tr>\r\n\r\n\r\n                        ))}\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    } else {\r\n\r\n        let customers2 = [];\r\n        for (var i = 0; i < customers.length; i++) {\r\n            var customer = customers[i];\r\n            \r\n            if (customer.id == props.specific) {\r\n                customers2.push(customer);\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n        \r\n        \r\n        return (\r\n            <div className=\"app-container\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Email</th>\r\n                            <th>Active</th>\r\n                            <th>Account Manager ID</th>\r\n                            <th>Reason For Joining</th>\r\n                            <th>Date Created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {customers2 && customers2.length > 0 && customers2.map((customer) => (\r\n                            <tr key={customer.id} data-item={customer} height=\"50px\">\r\n                                <td>{customer.first_name}</td>\r\n                                <td>{customer.last_name}</td>\r\n                                <td>{customer.email}</td>\r\n                                <td>{customer.active}</td>\r\n                                <td>{customer.account_manager_id}</td>\r\n                                <td>{customer.reason_for_joining}</td>\r\n                                <td>{customer.created_date}</td>\r\n                            </tr>\r\n\r\n\r\n                        ))}\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n\r\n};\r\n\r\nexport default Customers;","import React, { useState, useEffect } from 'react';\r\nimport Customers from \"./Customers.js\";\r\n\r\nconst CustomerView = (props) => {\r\n    const [accounts, setAccounts] = useState([]);\r\n\r\n    const getData = () => {\r\n        fetch('accounts.json'\r\n            , {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            }\r\n        )\r\n            .then(function (response) {\r\n                console.log(response)\r\n                return response.json();\r\n            })\r\n            .then(function (myJson) {\r\n                console.log(myJson);\r\n                setAccounts(myJson)\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    let accounts2 = [];\r\n\r\n    for (var i = 0; i < accounts.length; i++) {\r\n        var account = accounts[i];\r\n        if (account.customer_id == localStorage.getItem(\"customerID\")) {\r\n            accounts2.push(account);\r\n        }\r\n    }\r\n\r\n    if (accounts2.length == 0) {\r\n        return (\r\n            <div className=\"app-container\">\r\n                <Customers specific={localStorage.getItem(\"customerID\")} />\r\n                <br></br>\r\n                <p>This customer has no accounts associated with them.</p>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"app-container\">\r\n                <Customers specific={localStorage.getItem(\"customerID\")} />\r\n                <br></br>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Customer ID</th>\r\n                            <th>Address</th>\r\n                            <th>City</th>\r\n                            <th>State</th>\r\n                            <th>Zip Code</th>\r\n                            <th>Contest ID</th>\r\n                            <th>Rating</th>\r\n                            <th>Date Created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            accounts2 && accounts2.length > 0 && accounts2.map((account) => (\r\n                                <tr key={account.id}>\r\n                                    <td>{account.customer_id}</td>\r\n                                    <td>{account.address}</td>\r\n                                    <td>{account.city}</td>\r\n                                    <td>{account.state}</td>\r\n                                    <td>{account.zip_code}</td>\r\n                                    <td>{account.contest_id}</td>\r\n                                    <td>{account.rating}</td>\r\n                                    <td>{account.created_date}</td>\r\n                                </tr>\r\n\r\n                            ))}\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default CustomerView;","//import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home.js\";\nimport Contests from \"./Contests.js\";\nimport Customers from \"./Customers.js\";\nimport CustomerView from \"./CustomerView\";\n\nconst App = () => {\n    return (\r\n        <div className=\"App\">\r\n            <h1>Admin Panel</h1>\r\n            <Home />\r\n            <Routes>\r\n                <Route path=\"/\" element={<Customers specific=\"0\"/>} />\r\n                <Route path=\"contests\" element={<Contests />} />\r\n                <Route path=\"customers\" element={<Customers specific=\"0\"/>} />\r\n                <Route path=\"customerview\" element={<CustomerView />} />\r\n            </Routes>\r\n        </div>\r\n    );\n\n    \n};\n\n\n\n\nexport default App;\n//export default Contests;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App';\r\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}